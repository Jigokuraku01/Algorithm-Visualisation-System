name: Clang-Tidy Analysis

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches: [main, basic-implementation]

permissions:
  contents: read
  pull-requests: write

jobs:
  clang-tidy:
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare cache dirs
        run: |
          mkdir -p ~/.ccache
          mkdir -p clang-tidy-build
          mkdir -p /tmp/ci-venv
          mkdir -p /tmp/llvm-cache

      - name: Cache ccache
        uses: actions/cache@v3
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ hashFiles('**/clang-tidy-build/compile_commands.json') }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Cache CMake build directory
        uses: actions/cache@v3
        with:
          path: clang-tidy-build
          key: ${{ runner.os }}-cmake-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-cmake-

      - name: Cache LLVM downloads
        uses: actions/cache@v3
        with:
          path: /tmp/llvm-cache
          key: ${{ runner.os }}-llvm-18

      - name: Cache Python venv
        uses: actions/cache@v3
        with:
          path: /tmp/ci-venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Update system packages
        run: sudo apt-get update -qq

      - name: Install build tools and ccache
        run: |
          sudo apt-get install -y --no-install-recommends \
            wget curl gnupg ca-certificates \
            software-properties-common build-essential make \
            cmake ninja-build git ccache

      - name: Install Python
        run: |
          sudo apt-get install -y --no-install-recommends python3 python3-pip python3-venv

      - name: Setup Python venv
        run: |
          python3 -m venv /tmp/ci-venv
          source /tmp/ci-venv/bin/activate
          pip install --upgrade pip
          echo "VIRTUAL_ENV=/tmp/ci-venv" >> $GITHUB_ENV
          echo "/tmp/ci-venv/bin" >> $GITHUB_PATH

      - name: Install Qt5
        run: |
          sudo apt-get install -y --no-install-recommends \
          qtbase5-dev \
          qtchooser \
          qttools5-dev-tools \
          qtdeclarative5-dev \
          qtquickcontrols2-5-dev \
          qtcreator

      - name: Install LLVM & clang-tidy
        run: |
          curl -sSL https://apt.llvm.org/llvm.sh | sudo bash -s -- 18
          sudo apt-get install -y clang-18 clang-tidy-18 lld-18 libstdc++-12-dev
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-18 100
          sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-18 100

      - name: Verify installations
        env:
          QT_QPA_PLATFORM: offscreen
        run: |
          clang-tidy --version 
          qmake --version
          qtcreator --version
          cmake --version

      - name: Setup build directory
        run: |
          mkdir -p clang-tidy-build
          cp .clang-tidy clang-tidy-build/

      - name: Configure CMake with ccache
        working-directory: clang-tidy-build
        run: cmake \
          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
          -G Ninja \
          -DCMAKE_C_COMPILER_LAUNCHER=ccache \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ..

      - name: Install reviewdog
        run: |
          curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh \
            | sudo sh -s -- -b /usr/local/bin

      - name: Run clang-tidy with reviewdog
        run: |
          set -o pipefail
          git fetch --depth=1 origin ${{ github.event.pull_request.base.ref }}
          FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }}...HEAD | grep -E '\.cpp$|\.hpp$' || true)
          if [ -z "$FILES" ]; then
            FILES=$(find src include -type f \( -name '*.cpp' -o -name '*.hpp' \))
          fi
          echo "Linting files: $FILES"
          clang-tidy -p clang-tidy-build $FILES | reviewdog \
            -efm="%f:%l:%c: %tarning: %m" \
            -efm="%f:%l:%c: %trror: %m" \
            -name="clang-tidy" \
            -reporter=github-pr-review \
            -filter-mode=nofilter \
            -level=error
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload compile_commands.json
        uses: actions/upload-artifact@v4
        with:
          name: compile-commands
          path: clang-tidy-build/compile_commands.json
